################################################################################
#############################  Monit control file  #############################
################################################################################

# https://gist.github.com/Termiux/1282283

##
#
# Comments begin with a '#' and extend through the end of the line. Keywords
# are case insensitive. All path's MUST BE FULLY QUALIFIED, starting with '/'.
#
# Below you will find examples of some frequently used statements. For
# information about the control file and a complete list of statements and
# options, please have a look in the Monit manual.
#
# For your convenience I left some of Monit original advices and added some of my
# own along with my own customizations, enjoy.
#
# Termiux
# http://sysadminlog.cowhosting.net
#
##


###############################################################################
## Global section
###############################################################################

##
# Start Monit in the background (run as a daemon):
##

set daemon  30

##
# Set syslog logging with the 'daemon' facility. If the FACILITY option is
# omitted, Monit will use 'user' facility by default. If you want to log to
# a standalone log file instead, specify the full path to the log file. Example: set logfile /var/log/monit.log
##

set logfile syslog facility log_daemon

##
# Set the location of the Monit id file which stores the unique id for the
# Monit instance. The id is generated and stored on first Monit start. By
# default the file is placed in $HOME/.monit.id.
##

set idfile /var/.monit.id

##
# Set the location of the Monit state file which saves monitoring states
# on each cycle. By default the file is placed in $HOME/.monit.state. If
# the state file is stored on a persistent filesystem, Monit will recover
# the monitoring state across reboots. If it is on temporary filesystem, the
# state will be lost on reboot which may be convenient in some situations.
##

set statefile /var/.monit.state

##
# Set the list of mail servers for alert delivery. Multiple servers may be
# specified using a comma separator. By default Monit uses port 25 - it is
# possible to override this with the PORT option.
##

# set mailserver localhost
##
# backup.bar.baz port 10025,  # backup mailserver on port 10025
# localhost                   # fallback relay
##

##
# Set event queue location and size
##

set eventqueue basedir /var/monit slots 500
##
# By default Monit will drop alert events if no mail servers are available.
# If you want to keep the alerts for later delivery retry, you can use the
# EVENTQUEUE statement. The base directory where undelivered alerts will be
# stored is specified by the BASEDIR option. You can limit the maximal queue
# size using the SLOTS option (if omitted, the queue is limited by space
# available in the back end filesystem).
##

#check host elasticsearchserver with address luna
#    start program  = "/etc/init.d/elasticsearch start"
#    stop program = "/etc/init.d/elasticsearch stop"
#    restart program = "/etc/init.d/elasticsearch restart"
#    if failed ping then restart
#    if failed port 9200 protocol http with timeout 15 seconds then restart
#    if failed url http://10.0.0.13:9200/_cluster/health with content == 'green'
#    then restart
#group elasticsearch

# how to deal with not daemonized?
# shouldn't need stop program / restart program
# https://serverfault.com/questions/523226/monit-daemonize-non-daemon-process
# check host influxserver with address luna
check process influxdb pidfile {{lookup('env','HOME')}}/influxdb.pid
    start program  = "{{lookup('env','HOME')}}/imodel-deps/influxdb-1.7.2-1/usr/bin/influxd -config {{lookup('env','HOME')}}/configs/influxdb/influxdb.conf -pidfile {{lookup('env','HOME')}}/influxdb.pid"
    # if 10 restarts within 10 cycles then timeout
#     stop program = "/etc/init.d/influxdb stop"
#     restart program = "/etc/init.d/influxdb restart"
    #if failed ping then restart
    #if failed url http://luna:8086/debug/vars then restart # how is this used?
group influxdb

#check host sparkserver with address luna
#    start program = "/bin/bash /home/ubuntu/Downloads/spark-2.4.0-bin-hadoop2.7/sbin/start-all.sh"
#    stop program = "/bin/bash /home/ubuntu/Downloads/spark-2.4.0-bin-hadoop2.7/sbin/stop-all.sh"
#    if failed ping then start
#    if failed url http://10.0.0.13:8080 then start
#group sparkserver
